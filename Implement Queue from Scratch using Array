#include <iostream>
using namespace std;
class Queue{
   public:
   int * arr;
   int size;
   int front;
   int rear;

   Queue(int size){
      arr = new int[size];
      this -> size = size;
      front = -1;
      rear = -1;
   }

   void push(int data){
      if(rear == size - 1){
         cout<<"Queue is Full"<<endl;
      }

      else if(front == -1 && rear == -1){
          front++;
          rear++;
          arr[rear] = data;
      }

      else{
        rear++;
        arr[rear] = data;
      }
   }

   void pop(){
      if(rear == -1 && front==-1){
        cout<<"Queue is empty"<<endl;
        return;
      }

      else if(front == rear){
          front  = -1;
          rear = -1;
      }

      else{
         arr[front] = -1;
         front++;
      }
   }

   int getFront(){
      if(front == -1){
         cout<<"Queue is Empty"<<endl;
      }
      else{
          return arr[front];
      }
     
   }

   int getRear(){
      if(rear == -1){
         cout<<"Queue is Empty"<<endl;
      }
      else{
          return arr[rear];
      }
     
   }

   int getSize(){
        if(rear == -1 && front == -1){
            return 0;
        }

       return rear - front + 1;
   }

   bool checkEmpty(){
       if(front == -1 && rear == -1){
          return true;
       }

       return false;
   }

   bool checkFull(){
        if(rear == size - 1){
            return true;
        }

        return false;
   }
};
int main(){
    Queue qu(4);
    qu.push(1);
    qu.push(2);
    qu.push(3);
    qu.push(4);
    qu.pop();
    qu.push(5);
    cout<<qu.getSize()<<endl;
    cout<<qu.getFront()<<endl;

    return 0;
}
